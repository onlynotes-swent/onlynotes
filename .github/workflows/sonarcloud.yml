name: CI - Test Runner

# Run the workflow when commits are pushed on main or when a PR is modified
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
  merge_group:

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./${{ env.base_folder }}

    steps:
      # First step : Checkout the repository on the runner
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of Sonar analysis (if we use Sonar Later)

      # This step removes the current gradle cache to avoid any caching issues
      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      # Kernel-based Virtual Machine (KVM) is an open source virtualization technology built into Linux. Enabling it allows the Android emulator to run faster.
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Retrieve gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Load google-services.json
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: KTFmt Check
        run: ./gradlew ktfmtCheck

      # This step runs gradle commands to build the application
      - name: Assemble
        run: |
          # To run the CI with debug information, add --info
          ./gradlew assembleDebug lint --parallel --build-cache

      - name: Run tests
        run: |
          # To run the CI with debug information, add --info
          ./gradlew check --parallel --build-cache

      - name: Run instrumentation tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          avd-name: github
          force-avd-creation: true
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none -skin 1080x1920
          disable-animations: true
          script: ./gradlew connectedCheck --parallel --build-cache

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload report to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache