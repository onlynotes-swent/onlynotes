name: CI - Test Runner

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest

    steps:
      # First step: Checkout the repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # This step removes the current gradle cache to avoid any caching issues
      - name: Remove current gradle cache
        run: rm -rf ~/.gradle

      # Step to write google-services.json from secret to the appropriate location
      - name: Add google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" | base64 --decode > ./app/google-services.json

      # Enable KVM group permissions
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Caching is a very useful part of a CI, as a workflow is executed in a clean environement every time,
      # this means that one would need to re-download and re-process gradle files for every run. Which is very time consuming.
      #
      # To avoid that, we cache the the gradle folder to reuse it later.
      - name: Retrieve gradle cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: KTFmt Check
        run: ./gradlew ktfmtCheck

      - name: Assemble
        run: ./gradlew assemble lint --parallel --build-cache

      - name: Run tests
        run: ./gradlew check --parallel --build-cache

      - name: run tests on emulator
        env:
          ANDROID_EMULATOR_WAIT_TIME_BEFORE_KILL: 60
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 34
          target: google_apis
          arch: x86_64
          avd-name: github
          force-avd-creation: true
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck --parallel --build-cache

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload report to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache