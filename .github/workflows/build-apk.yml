name: Build APK

on:
  push:
    branches:
      - main
      - feature/set-up-github-APK-button
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the latest code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK 11 for Android build
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      # Cache Gradle dependencies
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Download Android SDK components
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          accept-android-sdk-licenses: true
          cmdline-tools-version: "latest"  # Ensure you use the correct version if needed

      # Load google-services.json
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
        run: |
          echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json

       # Grant execute permission for the gradlew script
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Build the APK
      - name: Build APK
        run: ./gradlew assembleDebug



      # Upload the APK as an artifact
      - name: Upload APK
        uses: actions/upload-artifact@v3
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
